{% extends model('component') %}

{% define config = {
    name: 'cart-comments',
    tag: 'cart-comments',
} %}

{% define data = {
    returnUrl: required,
    commentThread: required,
    createCommentForm: required,
    allCommentForms: required,
    attachCommentForms: required,
} %}

{% define attributes = {
    'tab-class-to-toggle': config.name ~ '__tab--active',
    'content-block-class-to-toggle': config.name ~ '__content-item--active',
} %}

{% set attachedComments = [] %}

{% for comment in data.commentThread.comments %}
    {% if comment.isAttached %}
        {% set attachedComments = attachedComments|merge([comment]) %}
    {% endif %}
{% endfor %}

{% block body %}
    {% block tabs %}
        <ul class="{{config.name}}__tabs">
            {% block tabItems %}
                <li class="{{config.name}}__tab-item">
                    <button class="{{config.name}}__tab {{config.name}}__tab--active {{config.jsName}}__tab"> {{ 'comment_widget.form.all' | trans }} ({{ data.commentThread.comments | length }})</button>
                </li>
                <li class="{{config.name}}__tab-item">
                    <button class="{{config.name}}__tab {{config.jsName}}__tab">{{ 'comment_widget.form.attached' | trans }} ({{ attachedComments | length }}) </button>
                </li>
            {% endblock %}
        </ul>
    {% endblock %}
    {% block content %}
        <div class="{{config.name}}__content">
            {% block contentItems %}
                <div class="{{config.name}}__content-item {{config.name}}__content-item--active {{config.jsName}}__content-item">
                    {% for comment in data.commentThread.comments %}
                        <div>
                            {% include molecule('cart-comment-info', 'CommentWidget') with {
                                data: {
                                    form: data.allCommentForms[comment.idComment] | default({}),
                                    comment: comment,
                                    returnUrl: data.returnUrl,
                                },
                            } only %}

                            {% include molecule('cart-comment-action-form', 'CommentWidget') with {
                                data: {
                                    action: url(comment.isAttached ? 'comment/tag/unattach' : 'comment/tag/attach'),
                                    hiddenData: [
                                        {
                                            name:"uuid",
                                            value: comment.uuid,
                                        },
                                        {
                                            name:"returnUrl",
                                            value: data.returnUrl,
                                        },
                                    ],
                                    buttonText: (comment.isAttached ? 'comment_widget.form.unattach' : 'comment_widget.form.attach') | trans,
                                },
                            } only %}
                        </div>
                    {% endfor %}
                    <hr>
                </div>
                <div class="{{config.name}}__content-item {{config.jsName}}__content-item">
                    {% if data.commentThread %}
                        {% for comment in data.commentThread.comments %}
                            <div>
                                {% if comment.isAttached %}
                                    {% include molecule('cart-comment-info', 'CommentWidget') with {
                                        data: {
                                            form: data.attachCommentForms[comment.idComment] | default({}),
                                            comment: comment,
                                            returnUrl: data.returnUrl,
                                        },
                                    } only %}

                                    {% include molecule('cart-comment-action-form', 'CommentWidget') with {
                                        data: {
                                            action: url(comment.isAttached ? 'comment/tag/unattach' : 'comment/tag/attach'),
                                            hiddenData: [
                                                {
                                                    name:"uuid",
                                                    value: comment.uuid,
                                                },
                                                {
                                                    name:"returnUrl",
                                                    value: data.returnUrl,
                                                },
                                            ],
                                            buttonText: (comment.isAttached ? 'comment_widget.form.unattach' : 'comment_widget.form.attach') | trans,
                                        },
                                    } only %}
                                {% endif %}
                            </div>
                        {% endfor %}
                    {% endif %}
                </div>
            {% endblock %}
        </div>
    {% endblock %}
{% endblock %}
